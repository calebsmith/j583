###Django Templates and Views

![](images/image1.png)

@@

###Previously on Lost

You had a view of student and course that gave you a random student record rather than one based on the URL

We should find a way to fix this.

Let me show you how.

@@

###Remember

Request:

* urls.py (Root, than per app as defined in root urls.py)
* views.py (as referenced by urls.py)
* template.html (as referenced by views.py)
<br/>

Trace everything backwards and make sure changes are correct on all three files.

@@

###App urls.py

Need to turn on /student/123 and the same for courses.

![](images/image2.png)

@@

###App views.py

![](images/image3.png)

@@

###App views.py

![](images/image4.png)

@@

###Test it!Now for Style! Bootstrap Style

```
cd newschool/static
curl https://github.com/twbs/bootstrap/releases/download/v3.3.2/bootstrap-3.3.2-dist.zip > bootstrap.zip
```

@@

###Unzip and Copy Content into static_media

```
unzip bootstrap.zip
mv bootstrap/* ../
```

@@

###Always clean up after yourself

```
rmdir bootstrap
rm bootstrap.zip
```

@@

###Directory Structure and files

![](images/image8.png)

* N.B. - "static" **not** "static_media" as in the image

@@

###Django Static Server

In production, you would serve static files with Apache or a CDN which would be faster

Django is a dyamic server so it is slower but will work in our case (and for development)

http://localhost:8000/static/css/bootstrap.css

* Notice the /static/ comes from the settings.py STATIC_URL

@@

###Collect Static Files

For when you need to get all of your static files in one place to put them on a server:

![](images/image9.png)


![](images/image10.png)

* N.B. - Ours will be in /public/static per STATIC_ROOT

@@

###Add bootstrap to base.html

```
<!-- Ignore this line - Needed to get proper formatting --

{% load static from staticfiles %}
<!DOCTYPE html>

<html lang="en">
    <head>
        <title>{% block title %}New School Project{% endblock %}</title>
        <link href="{% static 'css/bootstrap.min.css' %}">
    </head>

    <body>
        <div class="container">
            {% block content %}{% endblock %}
        </div>
        <script src="//ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
        <script src="{% static 'js/bootstrap.min.js' %}"></script>
    </body>
</html>
```

@@

###Update home.html links

![](images/image12.png)

* N.B. - {% load url from future %} no longer needed

@@

###Three files

What are the three files when editing making a new page?

1. urls.py

1. views.py

1. template_name.html

@@

###urls.py (setup new view)

![](images/image13.png)

@@

###Need a list of each model

duplicate course.html and rename course_list.html

duplicate student.html and rename student_list.html

Create new view for listing

![](images/image14.png)

@@

###What about 5000 students?

* Reference documentation

[Django Pagination](https://docs.djangoproject.com/en/dev/topics/pagination/)

* Just change the model names and make sure everything was imported.

@@

###views.py

![](images/image15.png)

![](images/image16.png)

@@

###views.py

![](images/image17.png)

@@

###templates course_list.html

![](images/image18.png)

@@

###template student_list.html

![](images/image19.png)

@@

###Static Files Problem

Oops, I Screwed up!

@@

###Words to live by

“Always have a friend who is smarter than you.”

![](images/image20.png)

@@

###Fix the views

Part 1 of 3

![](images/image21.png)

@@

###Fix The Views

Part 2 of 3

![](images/image22.png)

@@

###Fix The Views

Part 3 of 3.

![](images/image23.png)

@@
