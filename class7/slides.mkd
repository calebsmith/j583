###Intro to Django

The magical world of python publishing on the web!

![](images/image1.png)

@@

![](images/image2.png)

Meet Django Pony

@@

###Django is a Python Web Publishing Framework

Built by Journalists for rapid development of data-driven websites and web applications

Used at large and Small publications

What is this Django Magic?

@@

###Who uses it?

Washington Post

National Geographic

The Onion

Instagram

Pinterest


![](images/image3.png)


![](images/image4.png)


![](images/image5.png)


![](images/image6.png)

UNC Example


![](images/image7.png)

UNC Example


![](images/image8.png)

UNC Example


![](images/image9.png)


###Intro to Python Packaging

@@

###Let’s Make Magic!

* Install python and pip with apt-get/yum (for Linux)
* Install python and pip with brew (for Mac)
* Install virtualenv and virtualenvwrapper with pip
* Make directory for virtualenvs

```shell
# Linux
sudo apt-get install python2.7
sudo apt-get install python-pip

# Mac
brew install python
brew install pip

# Both
sudo pip install --upgrade pip
sudo pip install virtualenv
sudo pip install virtualenvwrapper
cd ~
mkdir .virtualenvs
```

@@

####Virtualenvwrapper Configuration

```shell
# In .bashrc for Linux
# In .bash_profile for Mac

export WORKON_HOME=$HOME/.virtualenvs
source /usr/local/bin/virtualenvwrapper.sh
```

* save and then:

```shell
source ~/.bash_profile
```

@@

###Understanding Virtual Environments

* This is a Sandbox Python Environment

* This makes is separate from your system's python

* You will install packages like Django for each virtualenv

* Each project has its own virtualenv

* Allows for different versions and setups

* Good practice!

@@

###Create your virtualenv

mkvirtualenv newschool --python=`which python`

![](images/image13.png)

@@

###Notice the Prompt

```shell
workon newschool
```
You will use 'workon' every time you start a new terminal window to work on a project

* To leave, use "deactivate"

```shell
deactivate
```

@@

###Install Django

pip install Django==1.7

![](images/image15.png)

@@


###Single File Django

* Follow along here:

[Simplifying Django](http://radar.oreilly.com/2014/04/simplifying-django.html)

@@


###Create a Django Project

django-admin.py startproject newschool

cd newschool

![](images/image16.png)

@@

###Manage.py

python manage.py runserver

![](images/image17.png)

@@

###Did it work?

In a browser, go to http://localhost:8000

![](images/image18.png)

@@

###Make your life easier with Tabs

Open a new Terminal tab

(Command T on mac | CTRL+SHIFT T on linux)

* Activate your virtual env

```shell
workon newschool
```

@@

### Project Files

- newschool (dir)

    - manage.py

    - newschool ( dir )

        - \_\_init\_\_.py (package file)

        - settings.py

        - urls.py

        - wsgi.py

@@

###Settings File

These are common settings for Django projects

BASE_DIR

DEBUG

DATABASES

STATIC_ROOT & MEDIA_ROOT

STATIC_URL & MEDIA_URL

TEMPLATE_DIRS

INSTALLED_APPS

@@

###Settings: Database

We will use SQLite

Good for learning

Bad for production

Fine for now

```python
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'newschool.db'),
        'USER': '',
        'PASSWORD': '',
        'HOST': '',
        'PORT': '',
    }
}
```

@@

###Settings: Paths

* Set the media and static paths (4 places)
* Goto root level newschool/ and

```shell
mkdir -p public/media
mkdir -p public/static
cd newschool
mkdir static
```

```python

MEDIA_ROOT = os.path.join(BASE_DIR, 'public', 'media')
STATIC_ROOT = os.path.join(BASE_DIR, 'public', 'static')

MEDIA_URL = '/media/'
STATIC_URL = '/static/'

```
@@

### Settings: STATICFILES_DIR

* This is where your CSS and JS files will live

```python
# Additional locations of static files
STATICFILES_DIRS = (
    os.path.join(PROJECT_DIR, 'static'),
)
```

@@

###Settings: Installed Apps

Each app must be “turned on” by adding it to the installed apps setting.

![](images/image25.png)

Yours will have admin already added

@@

### Create database

Run `migrate` to create a database and tables

(New in 1.7)

"Applying all migrations"

@@

###Check for errors

Check the terminal tab on runserver for errors

Check in browser: http://localhost:8000

@@

###App or Project?

* App is a set of related functionality (feature)

* Ex. User Comments, Admin, Registration, Blog, Forum

* Project is a collection of apps

* A project can contain multiple apps. However, apps can be reusable and
  used in different projects.

@@

###Lets make our First App

python manage.py startapp roster

![](images/image27.png)

@@

###Settings: Add App

Add to bottom of list include comma.

![](images/image28.png)

@@

###MVT Architecture Pattern

Django follows the Model-View-Template design pattern.

This isolates data storage, logic, and presentation into separate areas.

* Model: (storage) Describes the data and how a user interacts with the
  data (more later)

* View: (logic) Describes which data user sees (Ties other two together)

* Template: (presentation) Describes how you see the data

@@

###Make a View

Create a Hello World! page

Create a view in the roster app

![](images/image29.png)

@@

###URL Dispatcher

The URL dispatcher connects URLs to Views

![](images/image30.png)

@@

